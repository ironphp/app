# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2 # use CircleCI 2.0

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker 
      # specify the version you desire here
      - image: circleci/php:7.1-node-browsers # ...with this image as the primary container; this is where all `steps` will run
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4

    working_directory: ~/repo # directory where steps will run

    steps: # a set of executable commands
      - checkout # special step to check out source code to working directory
      - run: sudo composer self-update
      # Download and cache dependencies
      #- restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          #keys:
            #- composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            #- composer-v1-
			# or
            #- v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            #- v1-dependencies-
	  
      - run: composer install -n --prefer-dist
      - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
          key: composer-v1-{{ checksum "composer.lock" }}
          #key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - vendor
            #- ./vendor
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples	  

      # run tests!
      ##- run: phpunit
